{"version":3,"sources":["types/SortType.ts","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preperedGoods","sort","good1","good2","byName","localeCompare","byLength","length","reverse","getPreparedGoods","resetButton","type","className","onClick","handleClasses","property","includes","cn","prevReverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,2EAAAA,K,oBAAAA,E,mBAAAA,M,gBCSCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAwB,IAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA7BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,WAEPI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EAASc,OACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,SACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAMcS,CACnBlB,EACA,CAAEG,YAAWE,eAcTc,GAAehB,GAAaE,IAChC,wBACEe,KAAK,SACLC,UAAU,4BACVC,QAbU,WACZlB,EAAa,IACbE,GAAc,IAQd,mBASIiB,EAAgB,SAACC,GAAD,MAAyB,CAC7C,YAAarB,EAAUsB,SAASD,KAGlC,OACE,sBAAKH,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWK,IAAG,iBAAkBH,EAAcxB,EAASc,SACvDS,QAxBc,kBAAMlB,EAAaL,EAASc,SAqB5C,iCAQA,wBACEO,KAAK,SACLC,UAAWK,IAAG,oBAAqBH,EAAcxB,EAASgB,WAC1DO,QA9BgB,kBAAMlB,EAAaL,EAASgB,WA2B9C,4BAQA,wBACEK,KAAK,SACLE,QA9Cc,kBAAMhB,GAAc,SAAAqB,GAAW,OAAKA,MA+ClDN,UAAWK,IAAG,oBAAqB,CACjC,YAAarB,IAJjB,qBAUCc,KAIH,6BACGZ,EAAaqB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YClHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.689d44b1.chunk.js","sourcesContent":["export enum SortType {\n  byName = 'alphabetic',\n  byLength = 'length',\n}\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { SortType } from './types/SortType';\nimport { Goods } from './types/Goods';\nimport { SortParams } from './types/SortParams';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods: Goods,\n  { sortField, isReversed }: SortParams,\n) {\n  const preperedGoods = [...goods];\n\n  if (sortField) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.byName:\n          return good1.localeCompare(good2);\n        case SortType.byLength:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState<SortType | ''>('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, isReversed },\n  );\n\n  const toggleReverse = () => setIsReversed(prevReverse => !prevReverse);\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const setSortByName = () => setSortField(SortType.byName);\n\n  const setSortByLength = () => setSortField(SortType.byLength);\n\n  const resetButton = (sortField || isReversed) && (\n    <button\n      type=\"button\"\n      className=\"button is-danger is-light\"\n      onClick={reset}\n    >\n      Reset\n    </button>\n  );\n\n  const handleClasses = (property: SortType) => ({\n    'is-light': !sortField.includes(property),\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', handleClasses(SortType.byName))}\n          onClick={setSortByName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', handleClasses(SortType.byLength))}\n          onClick={setSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={toggleReverse}\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {resetButton}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}